name: Build

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.402'

      - name: NuGet cache
        uses: actions/cache@v1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('.config/dotnet-tools.json') }}-${{ hashFiles('*.lock') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build
        run: |
            dotnet tool restore
            dotnet paket restore
            dotnet build -c release

      - name: Test
        run: dotnet test -c release --logger trx --results-directory $PWD/bin/testresults

      - name: Pack
        run: |
            $FULLVERSION = dotnet nbgv get-version -v SemVer2
            $BASEVERSION = dotnet nbgv get-version -v MajorMinorVersion
            dotnet paket pack $PWD/bin/nuget --version $FULLVERSION
            "RELEASE_TAG=v$FULLVERSION" | out-file $env:GITHUB_ENV utf8 -append
            "RELEASE_TITLE=Version $BASEVERSION" | out-file $env:GITHUB_ENV utf8 -append

      - name: Upload nupkg
        uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: bin/nuget

      - name: Create tag
        uses: tvdias/github-tagger@v0.0.1
        if: ${{ ! contains(env.RELEASE_TAG, '-') }}
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}

      - name: Create draft release
        uses: Roang-zero1/github-create-release-action@master
        if: ${{ ! contains(env.RELEASE_TAG, '-') }}
        with:
          created_tag: ${{ env.RELEASE_TAG }}
          create_draft: true
          update_existing: true
          release_title: ${{ env.RELEASE_TITLE }}
          changelog_heading: h2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}